// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  has3dModel     Boolean        @default(false) @map("has_3d_model")
  unityModelId   String?        @map("unity_model_id")
  imageUrl       String         @map("image_url")
  price          Float
  ingredients    ingredient[]
  nutritionFacts nutritionFacts @map("nutrition_facts")
}

type nutritionFacts {
  carbohydrate  Float
  protein       Float
  totalFat      Float @map("total_fat")
  totalCalories Float @map("total_calories")
}

type ingredient {
  name           String
  nutritionFacts nutritionFacts @map("nutrition_facts")
  quantity       Int
}

model Table {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  tableNum    Int       @map("table_num")
  activeToken String    @unique @map("active_token")
  seatNum     Int       @map("seat_num")
  service     Service[]
}

model Service {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  tableToken   String   @map("table_token")
  serviceToken String   @map("service_token")
  tableId      String   @map("table_id") @db.ObjectId
  hasEnded     Boolean  @default(false) @map("has_ended")
  clients      client[]
  table        Table    @relation(fields: [tableId], references: [id])
  Order        Order[]
}

type client {
  name        String
  isAdmin     Boolean
  clientToken String  @map("client_token")
}

type product {
  name     String
  quantity Int
}

enum status {
  PENDING
  INPREPARE
  DONE
}

model Order {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  clientToken String    @map("client_token")
  products    product[]
  status      status
  service     Service   @relation(fields: [serviceId], references: [id])
  serviceId   String    @db.ObjectId
}
